/* $Id: CloudTest.java 2015-01-16 12:44:08Z qhobosheanesb $
 * Copyright (C) 2015 Sehlabaka Qhobosheane <qhobosheanesb@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

import static org.junit.Assert.*;
//import static org.hamcrest.CoreMatchers.*;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.junit.Ignore;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

/**
 *	Tests for {@link Cloud}.
 *
 *	@author qhobosheanesb@gmail.com (BenaBoy)
 */

public class CloudTest{
	private Cloud cloud;
	private Host host;
	private Customer client;

	@Before
	public void setup(){
		cloud = Cloud.INSTANCE;
		host = new Host(1,2,3);
		client = new Customer(1);
	}

	@After
	public void clearHostsAndCustomersCollections(){
		cloud.getHosts().clear();
		cloud.getCustomers().clear();
	}

	@Test
	public void testAddHostIntoEmptyHostsUsingSizeOfResultingHosts(){		
		cloud.addHost(host);
		assertEquals(1,cloud.getHosts().size());
	}

	@Test
	public void testAddHostToCheckWhetherDuplicatesOccurUsingReturnedValue(){
		cloud.addHost(host);		
		assertFalse("failure - addHost(Host) allows duplicates.",cloud.addHost(host));
	}

	@Test
	public void testAddHostToCheckWhetherDuplicatesOccurUsingSizeOfResultingCustomers(){
		cloud.addHost(host);
		cloud.addHost(host);
		assertEquals(1,cloud.getHosts().size());
	}

	@Test
	public void testAddCustomerIntoEmptyCustomersUsingSizeOfResultingCustomers(){
		cloud.addCustomer(client);
		assertEquals(1,cloud.getCustomers().size());
	}

	
	
}
